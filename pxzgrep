#!/bin/sh

# Copyright 2020 Axel Beckert <axel@ethz.ch>, ETH Zurich IT Security Center
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see https://www.gnu.org/licenses/.

options=""
files=""
parallel=$(egrep -c "^processor\s*: " /proc/cpuinfo)
verbose=""
pattern=""
while getopts :Vp:-: p; do
#    echo @="$@"
#    echo p="$p"
    if [ "$p" = "--help" ]; then
	cat <<EOF
Usage: $0 [-p<n>] [-V] [<xzgrep options>] <pattern> <file1> <file2> [<more files>]

Parameters:

Takes xz compressed files as parameters.

The grep result is saved per file in a file with the same basename
(e.g. abc.xz becomes abc), but in the _current_ working directory.

Options:

-p: Takes a number as parameter and is passed to xargs as -P (number
    of parallel processes spawned). Defaults to amount of cores
    present in the running system.

-V: Verbose, passes --verbose to xargs.

All other options are passed to xzgrep, especially -F and -E.
EOF
	exit 0
    elif [ "$p" = "V" ]; then
	verbose=--verbose
    elif [ "$p" = "p" ]; then
	parallel="$OPTARG"
    elif [ "$p" = "-" ]; then
	options="$options --$OPTARG"
    elif [ "$p" = "?" ]; then
	options="$options -$OPTARG"
    fi
done
shift `expr $OPTIND - 1`
pattern="$1"
shift
files="$@"

echo "$files" \
    | xargs -n1 | sed -e 's/\.xz$//g' \
    | xargs -n1 -P$parallel $verbose -I'{}' \
      sh -c "xzgrep $options '$pattern' {}.xz > "'./$(basename {})'

